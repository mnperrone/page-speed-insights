services:
    app:
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "8000:80"
        volumes:
            - .:/var/www/html  # Mapeo completo
            - ./docker/laravel:/var/www/html/docker/laravel
            - ./docker/composer:/tmp/composer
            - ./docker/phpunit:/tmp/phpunit
            - ./docker/phpunit-coverage:/tmp/phpunit-coverage
            - ./docker/phpunit-cache:/tmp/phpunit-cache
            - composer-cache:/tmp/composer-cache
        environment:
            - DB_HOST=mysql
            - DB_DATABASE=google_api_insights
            - DB_USERNAME=root
            - DB_PASSWORD=
        depends_on:
            mysql:
                condition: service_healthy
        networks:
            - laravel-network

    node:
        build:
            context: .
            dockerfile: Dockerfile.node
        ports:
            - "5173:5173"
        volumes:
            - .:/var/www/html
            - /var/www/html/node_modules
        depends_on:
            - app
        networks:
            - laravel-network

    mysql:
        image: mysql:8.0.32
        command: --default-authentication-plugin=mysql_native_password
        environment:
            MYSQL_DATABASE: google_api_insights
            MYSQL_ROOT_PASSWORD: ""
            MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
        volumes:
            - mysql-data:/var/lib/mysql
        ports:
            - "3306:3306"
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root"]
            interval: 5s
            timeout: 10s
            retries: 10
        networks:
            - laravel-network

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        ports:
            - "8080:80"
        environment:
            - PMA_HOST=mysql
            - PMA_USER=root
            - PMA_PASSWORD=
        depends_on:
            - mysql
        networks:
            - laravel-network

volumes:
    mysql-data:
        driver: local
    composer-cache:
        driver: local

networks:
    laravel-network:
        driver: bridge
